#pragma once

///////////////////////////////////////////////////////////////////////////////////////////////
///
/// HEADERS
///
///////////////////////////////////////////////////////////////////////////////////////////////
#include "AudioEditorState.h"

///////////////////////////////////////////////////////////////////////////////////////////////
///
/// NoneEffectState class	
///
/// Aim: One of the STate design pattern classes. Represent state when no button is pushed 
///	from start of program.
///
///	Inherits in public relations from AudioEditorState
///
///////////////////////////////////////////////////////////////////////////////////////////////
class NoneEffectState : public AudioEditorState
{
public:

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Parametrical constructor in NoneEffectState class
	///
	///	Arguments:	- const std::shared_ptr <Display> &	- pointer to main display in program 
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	NoneEffectState(const std::shared_ptr <Display> & display);

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Destructor in NoneEffectState class
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	~NoneEffectState();

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: Returns name of state where program is.
	///
	///	Arguments:	- void
	///
	/// Returns: States
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual States getStateName() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: returns pointer to effectmanager by reference
	///
	///	Arguments:	- void	- returns pointer to effectmanager by reference
	///
	/// Returns: const std::shared_ptr <EffectManager> &
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual const std::shared_ptr <EffectManager> & getEffectManager() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- void
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void NextParameterSettings() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- void
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void PreviousParameterSettings() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- void
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void IncreaseParameter() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- void
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void DecreaseParameter() override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- bool
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void UpdateEffectStatus(bool buttonStatus) override;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Public virtual override function in NoneEffectState class
	///
	/// Aim: For other children classes
	///
	///	Arguments:	- void
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void UpdateDisplay() override;
};
