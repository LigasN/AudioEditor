#pragma once
///////////////////////////////////////////////////////////////////////////////////////////////
///
/// HEADERS
///
///////////////////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <vector>

////////////////////////////////////////////////////////////////////////////////////////////
///
/// Abstract class. Body to Handle-Body design pattern of texts reading
///
////////////////////////////////////////////////////////////////////////////////////////////
class TXT_Body
{
public:

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Virtual abstract function in TXT_Body class
	///
	/// Aim: Load matrix with text from file in proper language
	///
	/// Arguments: std::vector <std::wstring> &
	///
	/// Returns: void
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual void Load_Texts_Matrix(std::vector <std::wstring> &newText) = 0;

	///////////////////////////////////////////////////////////////////////////////////////////////
	///
	/// Virtual destructor in TXT_Body class
	///
	///////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~TXT_Body() = default;
};
